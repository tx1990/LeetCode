public class Solution {
    public bool Exist(char[,] board, string word)
    {
        var m = board.GetLength(0);
        var n = board.GetLength(1);
        for (int i = 0; i < m; i++)
        {
            for (int j = 0; j < n; j++)
            {
                if (word[0] == board[i, j] && Exist2(word, 1, board, i, j, m, n))
                {
                    return true;
                }
            }
        }

        return false;
    }

    public bool Exist2(string word, int index, char[,] board, int i, int j, int m, int n)
    {
        if (index >= word.Length)
        {
            return true;
        }

        var c = word[index];
        board[i, j] = '.';
        if (j + 1 < n && c == board[i, j + 1])
        {
            if (Exist2(word, index + 1, board, i, j + 1, m, n))
            {
                return true;
            }
        }
        if (i + 1 < m && c == board[i + 1, j])
        {
            if (Exist2(word, index + 1, board, i + 1, j, m, n))
            {
                return true;
            }         
        }
        if (j - 1 >= 0 && c == board[i, j - 1])
        {
            if (Exist2(word, index + 1, board, i, j - 1, m, n))
            {
                return true;
            }
        }
        if (i - 1 >= 0 && c == board[i - 1, j])
        {
            if (Exist2(word, index + 1, board, i - 1, j, m, n))
            {
                return true;
            }
        }
        board[i, j] = word[index - 1];
        return false;
    }
}
