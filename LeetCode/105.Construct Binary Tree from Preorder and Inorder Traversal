/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public TreeNode BuildTree(int[] preorder, int[] inorder)
    {
        return BuildTree2(preorder, inorder, 0, preorder.Length - 1, 0, inorder.Length - 1);
    }

    public TreeNode BuildTree2(int[] preorder, int[] inorder, int preStart, int preEnd, int inStart, int inEnd)
    {
        if (preStart > preEnd || preStart >= preorder.Length)
        {
            return null;
        }

        var root = new TreeNode(preorder[preStart]);
        var index = inStart;
        for (int i = inStart; i <= inEnd; i++)
        {
            if (inorder[i] == preorder[preStart])
            {
                index = i;
                break;
            }
        }
        root.left = BuildTree2(preorder, inorder, preStart + 1, preStart + (index - inStart), inStart, index - 1);
        root.right = BuildTree2(preorder, inorder, preStart + (index - inStart) + 1, preEnd, index + 1, inEnd);
        return root;
    }
}
