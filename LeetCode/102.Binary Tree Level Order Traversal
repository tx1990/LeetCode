/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     public int val;
 *     public TreeNode left;
 *     public TreeNode right;
 *     public TreeNode(int x) { val = x; }
 * }
 */
public class Solution {
    public IList<IList<int>> LevelOrder(TreeNode root)
    {
        var result = new List<IList<int>>();
        if (root != null)
        {
            var queue = new Queue<TreeNode>();
            queue.Enqueue(root);
            var list = new List<int>();
            while (queue.Count > 0)
            {
                var count = queue.Count;
                for (int i = 0; i < count; i++)
                {
                    root = queue.Dequeue();
                    list.Add(root.val);
                    if (root.left != null)
                    {
                        queue.Enqueue(root.left);
                    }
                    if (root.right != null)
                    {
                        queue.Enqueue(root.right);
                    }
                }
                result.Add(new List<int>(list));
                list.Clear();
            }
        }
        return result;
    }
}
